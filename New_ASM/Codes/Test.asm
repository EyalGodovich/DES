; =============================================================================
; 	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
; 	Package  : DES Cipher system
; 	Created  : Tue, 17 Mar 2015 11:33:11
; 	Author   : Eyal Godovich 
; 	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
; =============================================================================

.386 			; Generate 32-bit code instead of 16.

IDEAL			; Syntax: IDEAL
MODEL small		; One DS and one CS Please.
STACK 100h		; Define the stack size
radix 10		; Our default radix will be decimal

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
; *********************           Data Segment           ********************
; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
DATASEG

	; Boolean: Is encryption selected?
	encryption 		 	db ?
	
	; The key should contain 64 bits, or 8 characters.
	key 			 	db 8 dup (?)
	
	; Keys array
	Keys 				dd 32 dup (?)
	ShiftsArray 		db 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0
	
	source db 64 dup (0)
	permutation db 64 dup (0)

	; Permuted Choice 2 ( PC -2 )
	; http://en.wikipedia.org/wiki/DES_supplementary_material#Permuted_choice_2_.28PC-2.29
	PC2Bytes0  			dd 0h,4h,20000000h,20000004h,10000h,10004h,20010000h,20010004h,200h,204h,20000200h,20000204h,10200h,10204h,20010200h,20010204h
	PC2Bytes1  			dd 0h,1h,100000h,100001h,4000000h,4000001h,4100000h,4100001h,100h,101h,100100h,100101h,4000100h,4000101h,4100100h,4100101h
	PC2Bytes2  			dd 0h,8h,800h,808h,1000000h,1000008h,1000800h,1000808h,0h,8h,800h,808h,1000000h,1000008h,1000800h,1000808h
	PC2Bytes3  			dd 0h,200000h,8000000h,8200000h,2000h,202000h,8002000h,8202000h,20000h,220000h,8020000h,8220000h,22000h,222000h,8022000h,8222000h
	PC2Bytes4  			dd 0h,40000h,10h,40010h,0h,40000h,10h,40010h,1000h,41000h,1010h,41010h,1000h,41000h,1010h,41010h
	PC2Bytes5  			dd 0h,400h,20h,420h,0h,400h,20h,420h,2000000h,2000400h,2000020h,2000420h,2000000h,2000400h,2000020h,2000420h
	PC2Bytes6  			dd 0h,10000000h,80000h,10080000h,2h,10000002h,80002h,10080002h,0h,10000000h,80000h,10080000h,2h,10000002h,80002h,10080002h
	PC2Bytes7  			dd 0h,10000h,800h,10800h,20000000h,20010000h,20000800h,20010800h,20000h,30000h,20800h,30800h,20020000h,20030000h,20020800h,20030800h
	PC2Bytes8  			dd 0h,40000h,0h,40000h,2h,40002h,2h,40002h,2000000h,2040000h,2000000h,2040000h,2000002h,2040002h,2000002h,2040002h
	PC2Bytes9  			dd 0h,10000000h,8h,10000008h,0h,10000000h,8h,10000008h,400h,10000400h,408h,10000408h,400h,10000400h,408h,10000408h
	PC2Bytes10 			dd 0h,20h,0h,20h,100000h,100020h,100000h,100020h,2000h,2020h,2000h,2020h,102000h,102020h,102000h,102020h
	PC2Bytes11 			dd 0h,1000000h,200h,1000200h,200000h,1200000h,200200h,1200200h,4000000h,5000000h,4000200h,5000200h,4200000h,5200000h,4200200h,5200200h
	PC2Bytes12 			dd 0h,1000h,8000000h,8001000h,80000h,81000h,8080000h,8081000h,10h,1010h,8000010h,8001010h,80010h,81010h,8080010h,8081010h
	PC2Bytes13 			dd 0h,4h,100h,104h,0h,4h,100h,104h,1h,5h,101h,105h,1h,5h,101h,105h

	; Substitution box
	spfunction1 dd 16843776d ,0d ,65536d ,16843780d ,16842756d ,66564d ,4d ,65536d ,1024d ,16843776d ,16843780d ,1024d ,16778244d ,16842756d ,16777216d ,4d ,1028d ,16778240d ,16778240d ,66560d ,66560d ,16842752d ,16842752d ,16778244d ,65540d ,16777220d ,16777220d ,65540d ,0d ,1028d ,66564d ,16777216d ,65536d ,16843780d ,4d ,16842752d ,16843776d ,16777216d ,16777216d ,1024d ,16842756d ,65536d ,66560d ,16777220d ,1024d ,4d ,16778244d ,66564d ,16843780d ,65540d ,16842752d ,16778244d ,16777220d ,1028d ,66564d ,16843776d ,1028d ,16778240d ,16778240d ,0d ,65540d ,66560d ,0d ,16842756d
	spfunction2 dd -7fef7fe0h ,-7fff8000h ,8000h ,108020h ,100000h ,20h ,-7fefffe0h ,-7fff7fe0h ,-7fffffe0h ,-7fef7fe0h ,-7fef8000h ,-80000000h ,-7fff8000h ,100000h ,20h ,-7fefffe0h ,108000h ,100020h ,-7fff7fe0h ,0h ,-80000000h ,8000h ,108020h ,-7ff00000h ,100020h ,-7fffffe0h ,0h ,108000h ,8020h ,-7fef8000h ,-7ff00000h ,8020h ,0h ,108020h ,-7fefffe0h ,100000h ,-7fff7fe0h ,-7ff00000h ,-7fef8000h ,8000h ,-7ff00000h ,-7fff8000h ,20h ,-7fef7fe0h ,108020h ,20h ,8000h ,-80000000h ,8020h ,-7fef8000h ,100000h ,-7fffffe0h ,100020h ,-7fff7fe0h ,-7fffffe0h ,100020h ,108000h ,0h ,-7fff8000h ,8020h ,-80000000h ,-7fefffe0h ,-7fef7fe0h ,108000h
	spfunction3 dd 208h,8020200h,0h,8020008h,8000200h,0h,20208h,8000200h,20008h,8000008h,8000008h,20000h,8020208h,20008h,8020000h,208h,8000000h,8h,8020200h,200h,20200h,8020000h,8020008h,20208h,8000208h,20200h,20000h,8000208h,8h,8020208h,200h,8000000h,8020200h,8000000h,20008h,208h,20000h,8020200h,8000200h,0h,200h,20008h,8020208h,8000200h,8000008h,200h,0h,8020008h,8000208h,20000h,8000000h,8020208h,8h,20208h,20200h,8000008h,8020000h,8000208h,208h,8020000h,20208h,8h,8020008h,20200h
	spfunction4 dd 802001h,2081h,2081h,80h,802080h,800081h,800001h,2001h,0h,802000h,802000h,802081h,81h,0h,800080h,800001h,1h,2000h,800000h,802001h,80h,800000h,2001h,2080h,800081h,1h,2080h,800080h,2000h,802080h,802081h,81h,800080h,800001h,802000h,802081h,81h,0h,0h,802000h,2080h,800080h,800081h,1h,802001h,2081h,2081h,80h,802081h,81h,1h,2000h,800001h,2001h,802080h,800081h,2001h,2080h,800000h,802001h,80h,800000h,2000h,802080h
	spfunction5 dd 100h,2080100h,2080000h,42000100h,80000h,100h,40000000h,2080000h,40080100h,80000h,2000100h,40080100h,42000100h,42080000h,80100h,40000000h,2000000h,40080000h,40080000h,0h,40000100h,42080100h,42080100h,2000100h,42080000h,40000100h,0h,42000000h,2080100h,2000000h,42000000h,80100h,80000h,42000100h,100h,2000000h,40000000h,2080000h,42000100h,40080100h,2000100h,40000000h,42080000h,2080100h,40080100h,100h,2000000h,42080000h,42080100h,80100h,42000000h,42080100h,2080000h,0h,40080000h,42000000h,80100h,2000100h,40000100h,80000h,0h,40080000h,2080100h,40000100h
	spfunction6 dd 20000010h,20400000h,4000h,20404010h,20400000h,10h,20404010h,400000h,20004000h,404010h,400000h,20000010h,400010h,20004000h,20000000h,4010h,0h,400010h,20004010h,4000h,404000h,20004010h,10h,20400010h,20400010h,0h,404010h,20404000h,4010h,404000h,20404000h,20000000h,20004000h,10h,20400010h,404000h,20404010h,400000h,4010h,20000010h,400000h,20004000h,20000000h,4010h,20000010h,20404010h,404000h,20400000h,404010h,20404000h,0h,20400010h,10h,4000h,20400000h,404010h,4000h,400010h,20004010h,0h,20404000h,20000000h,400010h,20004010h
	spfunction7 dd 200000h,4200002h,4000802h,0h,800h,4000802h,200802h,4200800h,4200802h,200000h,0h,4000002h,2h,4000000h,4200002h,802h,4000800h,200802h,200002h,4000800h,4000002h,4200000h,4200800h,200002h,4200000h,800h,802h,4200802h,200800h,2h,4000000h,200800h,4000000h,200800h,200000h,4000802h,4000802h,4200002h,4200002h,2h,200002h,4000000h,4000800h,200000h,4200800h,802h,200802h,4200800h,802h,4000002h,4200802h,4200000h,200800h,0h,2h,4200802h,0h,200802h,4200000h,800h,4000002h,4000800h,800h,200002h
	spfunction8 dd 10001040h,1000h,40000h,10041040h,10000000h,10001040h,40h,10000000h,40040h,10040000h,10041040h,41000h,10041000h,41040h,1000h,40h,10040000h,10000040h,10001000h,1040h,41000h,40040h,10040040h,10041000h,1040h,0h,0h,10040040h,10000040h,10001000h,41040h,40000h,41040h,40000h,10041000h,1000h,40h,10040040h,1000h,41040h,10001000h,40h,10000040h,10040000h,10040040h,10000000h,40000h,10001040h,0h,10041040h,40040h,10000040h,10040000h,10001000h,10001040h,0h,10041040h,41000h,41000h,1040h,1040h,40040h,10000000h,10041000h

	; Other Variables
	TempDW 				dd 0
	Left   				dd 0
	Right  				dd 0 
	i 					dw 0
	Right1				dd 0
	Left1				dd 0
	Right2				dd 0
	Left2				dd 0
	Key1 				dd 0h
	Key2 				dd 0h
	m 					dw 0

	output db 4096 dup (20h)
	outputc dw 0

	; Because we are creating a 16-bit code, our code segment have a mximum of 64k, and we pretty much used 37kb ( approximately ) already, so we have only 28kb free (2^16 - 37000 = 28536 bytes or 28.536 kb)
	; Maximum Input file string size: 29kb
	inputFileMaxSize	equ 28000
	inputFileHandle 	dw ?
	inputFileContent 	db inputFileMaxSize dup (20h) ; Fill up the empty spaces with spaces
	inputFileContentDec db inputFileMaxSize dup (20h) ; Fill up the empty spaces with spaces
	inputFileSize		dw ?
; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
; *********************           Code Segment           ********************
; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
CODESEG
	
	; Include all of my macros and procedures from the library folder
	include '..\Codes\Library\Base.asm'
	include '..\Codes\Library\Console.asm'
	include '..\Codes\Library\String.asm'
	include '..\Codes\Library\Debug.asm'
	include '..\Codes\Library\File.asm'
	
	macro DrawPixel x, y, color
		mov bh,0h 
		mov cx,x
		mov dx,y
		mov al,color
		mov ah,0ch 
		int 10h 
	endm

start:
	mov ax, @data
	mov ds, ax
	

	mov ax, 13h
	int 10h

	mov al, '#'
	mov     ah, 09h       
	mov     bl, 0e4h ; Red text on bright yellow background
	mov     cx, 100   ; hello_message is 12 bytes long
	int     10h
 

    int 10h

	index = 100
	
	REPT 25
		DrawPixel index, 150, 4
		index = index + 1
	endm

exit:
	mov ax, 4c00h
	int 21h
END start
